= Intent Radio =
Stephen Blott <smblott+ir@gmail.com>
:toc2:
:theme: smblott

.Quick links:
****
- Jump straight to broadcast intent link:#how[instructions].
- Jump straight to link:#downloads[downloads].
****

// /////////////////////////////////////////////////////
== What? ==

****
_Intent Radio_ (or _IR_) is an android audio media app without a graphical user
interface.  It is controlled exclusively through the delivery of
http://developer.android.com/reference/android/content/BroadcastReceiver.html[broadcast
intents], typically generated by an automation app such as
http://tasker.dinglisch.net/[Tasker].  If you don't know what a broadcast
intent is, then this is probably not the app for you.

Despite the name, _IR_ will happily play local audio media too.  Once
you're done reading here, take a look at link:playlist.html[this approach]
to having _IR_ manage a playlist of songs.
****

// // /////////////////////////////////////////////////////
// == Who? ==
// 
// ****
// You might be interested in _Intent Radio_ if:
// 
// - you use Android,
// - you use Tasker,
// - you listen to internet radio or other audio, and
// - well, you're a geek.
// ****

// // /////////////////////////////////////////////////////
// == Download ==
// 
// ****
// I'm too tight to pay Google $25 for the honour of hosting this on the
// Play Store.  So, for the moment, the download is on
// https://github.com/smblott-github/intent_radio/releases[GitHub] (and direct
// `apk` download links are link:#downloads[below]).
// 
// Alternatively, you can download and build the app from
// https://github.com/smblott-github/intent_radio[source].
// ****

// /////////////////////////////////////////////////////
== Why? ==

// ****
// There are already many internet radio apps for Android; so, why another
// one?
// 
// Well, I couldn't find one that worked just right for me...
// 
// Xiialive::
//    I tried (and like) http://xiialive.com/[xiialive].  And it supports external
//    broadcast intents.  However, I was finding it would hang irredeemably
//    on start up about two times in five, mainly when on mobile data.
// 
// Tunein::
//    And I particularly like http://tunein.com/[tunein].  However, it doesn't
//    support either shortcuts or broadcast intents, so I have no way to
//    start and stop it automatically, say when a headset is plugged in or
//    out.
// 
// BBC IPlayer Radio::
//    The
//    https://play.google.com/store/apps/details?id=uk.co.bbc.android.iplayerradio&hl=en[BBC
//    IPlayer Radio] app is pretty slick; and most of what I listen to is BBC.
//    Again, however, there's no way to control playback without much
//    pointing and pressing.
// ****

****
It's simple:

- _Automation_.

http://tasker.dinglisch.net/[Tasker] is an automation app for Android.
It's a small graphical programming language combined with a mechanism to
fire off tasks in response to various events.

_IR_ was written primarily to be driven by Tasker, either via task
shortcuts, or in response to events such as a headset plugged in or out.
Or perhaps based on the type of network to which you're attached.  Or the
network's SSID .  Or the time of day.  Or the day of the week. Or some
combination of the above.  Or whatever...
****

// /////////////////////////////////////////////////////
[[how]]
== How? ==

****
_Intent Radio_ supports the following broadcast intents...
****

.`org.smblott.intentradio.PLAY`
****
- start playback
- extras:
** `url` -- the URL to play
** `name` -- the display name for the station

Both extras are strings, and both are optional.

If `url` is omitted, then Intent Radio restarts the previous
station.  If there is no such station, then it plays BBC Radio 4 (because,
well, why not?).
****

.`org.smblott.intentradio.STOP`
****
- stop playback
- extras: none
****

.`org.smblott.intentradio.PAUSE`
****
- pause playback, if playing
- extras: none
****

.`org.smblott.intentradio.RESTART`
****
- restart playback, if paused
- extras: none
****

[[state-request]]
.`org.smblott.intentradio.STATE_REQUEST`
****
- request that _IR_ broadcast its state (see below)
- extras: none

This intent is _not required_ to receive state updates.
_IR_ always broadcasts its state whenever it changes.
****

[[state]]
.`org.smblott.intentradio.STATE`
****
- this is broadcast by Intent Radio itself to inform listeners (such as Tasker) of its state
- extras:
** `state`: one of `stop`, `play`, `play/buffering`, `play/pause`, `play/duck`, `complete`, or `error`
** `url`: the current URL
** `name`: the current station name

These are all strings.

The sample Tasker project includes a listener which sets the global Tasker
variables `%IRSTATE`, `%IRURL` and `%IRNAME` whenever such an intent is
received.

If you are not using the sample project (or have installed an earlier
version and edited it to meet your own needs), then set up Tasker as follows:

- Create a new Tasker profile: `event/System/Intent Received`.
- Set _Action_ to `org.smblott.intentradio.STATE`.
- Within the associated task, the local variable `%state` is the current
  state, `%url` the current URL, and `%name` the current name.  Assign these to
  global variables of your choice, such as `%IRSTATE`, `%IRURL` and `%IRNAME`.
****

.More Information:
****
- During playback, _IR_ places a notification in the notification area.
  Clicking on the notification causes playback to either stop or
  (re-)start, as appropriate.

- _IR_ uses the built-in Android
  http://developer.android.com/reference/android/media/MediaPlayer.html[media
  player] for playback.  So all audio codecs supported natively by Android
  are supported.

- Additionally, _Intent Radio_ supports
  http://en.wikipedia.org/wiki/PLS_(file_format)[PLS playlists] (suffix `.pls`) and http://en.wikipedia.org/wiki/M3U[M3U
  playlists] (suffix `.m3u` or `.m3u8`).
  For example:
** `http://www.bbc.co.uk/.../xxx.pls`
** `http://www.bbc.co.uk/.../xxx.m3u`
** `http://www.bbc.co.uk/.../xxx.m3u8`

// - When a playlist is encountered, _IR_ selects a random link from the
//   playlist.  Additionally, playlists can themselves contain playlists
//   (nested up to ten times).
****

.Important!
****
- Although _IR_ has no graphical user interface, you must
  nevertheless _launch the app at least once_.  Otherwise, Android will
  not deliver broadcast intents to the app's background service.  This is
  an Android security feature. +
  _Thereafter, it should not be necessary to launch the app at all_, even after a reboot or an upgrade.

- _IR_ is built for Android API level 16, so only for 4.1 (Jelly Bean)
  devices and above.

// Also, start up can be slow for some streams.  BBC Radio 4, for example,
// takes in excess of 30 seconds for playback to begin.  I do not know the
// source of this delay.  Please be patient.
****

// /////////////////////////////////////////////////////
== More... ==

.If you're using Tasker:
****
- Then this link:./Radio.prj.xml[Tasker project] may be helpful in getting
  started with _Intent Radio_. +
  This project can also be installed from within the app itself.
- Or, there are some basic instructions link:./tasker.html[here].
****

// .Debugging:
// ****
// - See link:./debug.html[here].
// ****

// /////////////////////////////////////////////////////
[[downloads]]
== Downloads ==

.Downloads:
****
- Available on the Google
  https://play.google.com/store/apps/details?id=org.smblott.intentradioio[Play Store].

- Also available on https://f-droid.org/repository/browse/?fdid=org.smblott.intentradio[F-Droid]. +
  If you use this version, then also install the
  https://f-droid.org/[F-Droid app] in order to receive notifications of new releases.

Do not install versions from both of these sources.  Pick one and stick
with it.  They're the same thing.

// Alternatively:
// 
// - The latest release is
//   link:IntentRadio-release.apk[here]
//   or on https://dl.dropboxusercontent.com/u/41898306/IntentRadio-release.apk[Dropbox]. +
//   If you use this version, then you will _not_ be notified about updates.

Alternatively:

- Pick up the latest release from https://www.dropbox.com/sh/8f4tpun8zynqorz/AABLoQhgUBF2OsNmsSNCI5tia?dl=0[Dropbox].
****

// /////////////////////////////////////////////////////
[[notes]]
== Release Notes ==

.Version 1.9.11:
****
- Add permission to read external storage.  This should allow IR to play content stored in external storage.
****

.Version 1.9.10:
****
- Just change the default URL (because the BBC have been diddling with
  their URLs).
****

.Version 1.9.9:
****
- Considerably better (but not yet perfect) handling of drops due to
  intermittent network connectivity.
- Now defaults to reconnect on network drops.
- Fixed minor bugs and/or inconsistencies.
- Check out the web page for information on how to handle playlists.
****

.Version 1.9.8:
****
- Add option (disabled by default) to restart playback if the network
  connection is lost and then re-established.
****

.Version 1.9.7:
****
- Better playlist detection and handling.
- Bug fixes for playlist handling.
- Bug fixes for audio focus.
- Better default BBC Radio 4 URL.
- Clarify in-app messages.
- Disable recursive playlist fetch. +
  Without recursive playlist fetch, we can use better URLs for some
  stations, including some important BBC radio stations.
- Use better (faster start up) URL for default radio station.
- Add in-app preference for cancelling the notification.
****

.Version 1.8:
****
- Major reworking of notifications, including look and click behaviour. +
  When stopped or paused, clicking on the notification now restarts.
- Substantial reworking of the state/audio-focus/thread model.
- Recursive playlist fetch.  +
  If a playlist contains a playlist, then fetch that too. +
  Post a playlist of your favourite stations online somewhere, even containing
  playlists itself, point Intent Radio towards it, and listen to a random
  favourite station.
- Changed name of state `play/dim` to `play/duck`; added state `complete`.
- Add .M3u8 playlist type (for BBC Media Selector).
****

.Version 1.7:
****
- Add button to install sample Tasker project.
- Improved (extended) the sample Tasker project.
- Broadcast state (can be tracked in Tasker).
- Sample project sets Tasker global variables `%IRSTATE`, `IRURL` and `IRNAME` to broadcast state.
- Handle implicit intents.
- A PLAY request without a "url" plays last station, if possible.
- Re-use `MediaPlayer` instance.
- Better notifications.
****

.Version 1.6:
****
- Separate page for clipping intents to clipboard.
- Better layout in app.
- Notification persists after errors +
  (but then it is not _ongoing_, so it can be dismissed).
- Version and build date visible in app.
- Much code refactoring and clean up.
****

.Version 1.5:
****
- Pause/restart broadcast intents.
- Improved handling of audio focus.
- Improved notifications.
****

.Version 1.3:
****
- M3u playlist support.
****

.Version 1.2:
****
- Obtain WiFi lock when on WiFi.
- Handle audio focus events.
****

.Version 1.1
****
- Use `httpURLConnection`.
- Fetch playlists on an asynchronous thread (so, non-blocking).
****

.Version 1.0
****
- Initial release.
****

// vim: set syntax=asciidoc:
